
// Triangle mixin
@mixin triangle($direction: up, $color: $primary, $size: 5, $equal: false) {

    @if $direction == up {
        width: 0; 
        height: 0;
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        @if $equal {
            border-bottom: (($size + $size) * 0.866) solid $color;
        } @else {
            border-bottom: $size solid $color;
        }
    }

    @if $direction == down {
        width: 0; 
        height: 0; 
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        @if $equal {
            border-top: (($size + $size) * 0.866) solid $color;
        } @else {
            
            border-top: $size solid $color;
        }
    }

    @if $direction == right {
        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        @if $equal {
            border-left: (($size + $size) * 0.866) solid $color;
        } @else {
            border-left: $size solid $color;
        }
    }

    @if $direction == left {
        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        @if $equal {
            border-right: (($size + $size) * 0.866) solid $color;
        } @else {
            border-right: $size solid $color;
        }
    }
}

@mixin bottom-border() {
    position: relative;
    border-bottom: 8px solid $secondary;

    &::before {
        content: "";
        height: 8px;
        bottom: 0;
        width: 100%;
        position: absolute;
        border-bottom: 8px solid $secondary-accent;
        z-index: 2;
    }

    &::after {
        content: "";
        @include triangle(down, $secondary, 40px, $equal: true);
        position: absolute;
        left: 50%;
        bottom: 0;
        transform: translate(-50%, 60%);
        z-index: 2;
    }
}

@mixin pixel-overlay() {
    &:before {
        content: "";
        background-image: url('./../images/pixel-pattern.png');
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 1;
        opacity: 0.3;
    }
}

@mixin paragraph-border($color) {
    border-top: 1px solid $color;
    position: relative;

    &:after {
        content: "";
        position: absolute;
        border-left: 1px solid $color;
        left: 0;
        top: 0;
        bottom: 75%;
    }

}

@mixin black-gradient() {
   /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#000000+0,000000+100&0.65+25,0+86 */
    background: -moz-linear-gradient(left,  rgba(0,0,0,0.65) 0%, rgba(0,0,0,0.65) 25%, rgba(0,0,0,0) 86%, rgba(0,0,0,0) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(left,  rgba(0,0,0,0.65) 0%,rgba(0,0,0,0.65) 25%,rgba(0,0,0,0) 86%,rgba(0,0,0,0) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(to right,  rgba(0,0,0,0.65) 0%,rgba(0,0,0,0.65) 25%,rgba(0,0,0,0) 86%,rgba(0,0,0,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a6000000', endColorstr='#00000000',GradientType=1 ); /* IE6-9 */
}